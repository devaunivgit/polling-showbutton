{"version":3,"sources":["mockJson/questions.js","reducers/store.js","components/form.js","App.js","index.js"],"names":["initalState","questions","id","qn","options","value","description","active","answers","answer","showAnswer","actualAnswer","myReducer","state","action","newState","Object","objectSpread2","l","length","type","indx","findIndex","el","flag","nindx","validated","PollForm","props","react_default","a","createElement","Fragment","Form","Group","controlId","map","opt","index","Check","key","label","name","defaultChecked","defaultValue","required","Control","Feedback","App","useSelector","dispatch","useDispatch","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","result","filter","e","Container","Row","Col","question","noValidate","onSubmit","components_form","as","xs","Button","variant","onClick","store","createStore","rootElement","document","getElementById","ReactDOM","render","StrictMode","es"],"mappings":"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","file":"static/js/main.2e641e5d.chunk.js","sourcesContent":["export const Questions = [\r\n  {\r\n    id: 1,\r\n    qn: \"1.\tWhat is the current Year\",\r\n    options: [\r\n      {\r\n        value: \"2020\",\r\n        description: \"2020\"\r\n      },\r\n      {\r\n        value: \"2021\",\r\n        description: \"2021\"\r\n      },\r\n      {\r\n        value: \"2022\",\r\n        description: \"2022\"\r\n      },\r\n      {\r\n        value: \"2023\",\r\n        description: \"2023\"\r\n      }\r\n    ],\r\n    active: false\r\n  },\r\n  {\r\n    id: 2,\r\n    qn: \"2.\tWhat is the current Month\",\r\n    options: [\r\n      {\r\n        value: 7,\r\n        description: \"July\"\r\n      },\r\n      {\r\n        value: 5,\r\n        description: \"May\"\r\n      },\r\n      {\r\n        value: 6,\r\n        description: \"June\"\r\n      },\r\n      {\r\n        value: 4,\r\n        description: \"April\"\r\n      }\r\n    ],\r\n    active: true\r\n  }\r\n];\r\n\r\nexport const Answers = [\r\n  {\r\n    id: \"1\",\r\n    answer: \"2020\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    answer: \"6\"\r\n  }\r\n];\r\n","import { Questions, Answers } from \"../mockJson/questions\";\r\nconst initalState = {\r\n  questions: Questions,\r\n  answers: Answers,\r\n  showAnswer: false,\r\n  actualAnswer: false\r\n};\r\nconst myReducer = (state = initalState, action) => {\r\n  const newState = { ...state };\r\n  const l = newState.questions.length;\r\n  // const year = new Date().getFullYear();\r\n  // const month = new Date().toLocaleString(\"default\", { month: \"long\" });\r\n  switch (action.type) {\r\n    case \"PREVIOUS\":\r\n      let indx = state.questions.findIndex(el => el.active);\r\n      if (indx === 0 && l === 1) {\r\n        return newState;\r\n      } else {\r\n        if (indx === 0) {\r\n          state.questions[indx].active = false;\r\n          state.questions[++indx].active = true;\r\n        } else {\r\n          state.questions[indx].active = false;\r\n          state.questions[--indx].active = true;\r\n        }\r\n        return {\r\n          ...newState,\r\n          showAnswer: false,\r\n          actualAnswer: false,\r\n          questions: [...state.questions]\r\n        };\r\n      }\r\n    case \"ANSWER\":\r\n      let flag = false;\r\n      if (action.value.length > 0) {\r\n        flag = true;\r\n      }\r\n      return {\r\n        ...newState,\r\n        showAnswer: true,\r\n        actualAnswer: flag\r\n      };\r\n\r\n    case \"NEXT\":\r\n      let nindx = state.questions.findIndex(el => el.active);\r\n      if (nindx === 0 && l === 1) {\r\n        return newState;\r\n      } else {\r\n        if (nindx === 0) {\r\n          state.questions[nindx].active = false;\r\n          state.questions[++nindx].active = true;\r\n        } else {\r\n          state.questions[nindx].active = false;\r\n          state.questions[--nindx].active = true;\r\n        }\r\n\r\n        return {\r\n          ...newState,\r\n          showAnswer: false,\r\n          actualAnswer: false,\r\n          questions: [...state.questions]\r\n        };\r\n      }\r\n    case \"FormValid\":\r\n      return {\r\n        ...newState,\r\n        validated: true\r\n      };\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import React from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nconst PollForm = props => {\r\n  return (\r\n    <>\r\n      <Form.Group controlId=\"exampleForm.choice\">\r\n        {props.options.map((opt, index) => {\r\n          return (\r\n            <Form.Check\r\n              key={index}\r\n              type=\"radio\"\r\n              label={opt.description}\r\n              id=\"answer\"\r\n              name=\"answer\"\r\n              defaultChecked={\"\"}\r\n              defaultValue={opt.value}\r\n              required\r\n            />\r\n          );\r\n        })}\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Please choose option\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PollForm;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PollForm from \"./components/form\";\r\nexport default function App() {\r\n  const validated = useSelector(state => state.validated);\r\n  const questions = useSelector(state => state.questions);\r\n  const showAnswer = useSelector(state => state.showAnswer);\r\n  const actualAnswer = useSelector(state => state.actualAnswer);\r\n  const answers = useSelector(state => state.answers);\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = event => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      dispatch({ type: \"FormValid\" });\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      const result = answers.filter(e => {\r\n        let flag = false;\r\n        if (e.id === form.qn.value && e.answer === form.answer.value) {\r\n          flag = true;\r\n        }\r\n        return flag;\r\n      });\r\n      dispatch({ type: \"ANSWER\", value: result });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h1>Polling Show button</h1>\r\n          </Col>\r\n        </Row>\r\n        {questions.map(question => {\r\n          return (\r\n            <React.Fragment key={question.id}>\r\n              <Row>\r\n                <Col>\r\n                  <h3>{question.active && question.qn}</h3>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    {question.active && (\r\n                      <Form.Group controlId=\"exampleForm.questionId\">\r\n                        <Form.Control\r\n                          type=\"hidden\"\r\n                          name=\"qn\"\r\n                          defaultValue={question.id}\r\n                        />\r\n                      </Form.Group>\r\n                    )}\r\n\r\n                    {question.active && <PollForm options={question.options} />}\r\n\r\n                    {question.active && (\r\n                      <Form.Group as={Row}>\r\n                        <Col xs=\"4\">\r\n                          <Button\r\n                            variant=\"primary\"\r\n                            type=\"button\"\r\n                            onClick={() => dispatch({ type: \"PREVIOUS\" })}\r\n                          >\r\n                            Previous\r\n                          </Button>\r\n                        </Col>\r\n                        <Col xs=\"4\">\r\n                          <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                          </Button>\r\n                        </Col>\r\n                        <Col xs=\"4\">\r\n                          <Button\r\n                            variant=\"primary\"\r\n                            onClick={() => dispatch({ type: \"NEXT\" })}\r\n                            type=\"button\"\r\n                          >\r\n                            Next\r\n                          </Button>\r\n                        </Col>\r\n                      </Form.Group>\r\n                    )}\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        {showAnswer && (\r\n          <Row>\r\n            <Col>\r\n              {actualAnswer ? <h4>Right Answer</h4> : <h4>Wrong Answer</h4>}\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport myReducer from \"./reducers/store\";\r\nimport App from \"./App\";\r\n\r\nconst store = createStore(myReducer);\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}